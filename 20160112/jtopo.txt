<link href="__PUBLIC__/dwz/themes/css/jtopo.css" rel="stylesheet" type="text/css" />
<script src="__PUBLIC__/dwz/js/jtopo-0.4.8-min.js" type="text/javascript"></script>
<div class="container_box" id="container_box">
	
		
		
		<div id="toolContent">
			<div class="panelBar" style="height:33px;">
				<ul class="toolBar">
					<li><a class="add" href="javascript:void(0)" title="新建拓扑图" onclick="xgdCreateNode()" ><span>新增节点</span></a></li>
					<li><a  title="确实要删除选中记录吗？" href="javascript:void(0)" class="delete"><span onclick="xgdClearScene()">清空画布</span></a></li>
					<li><a  href="javascript:void(0)" class="reflash" onclick="xgdReflash()"><span>刷新</span></a></li>
					<li><a  href="javascript:void(0)" class="fullscreen" onclick="runScreen()"><span>全屏</span></a></li>
					<li><a class="save" href="javascript:void(0)" title="保存" onclick="xgdSave()"><span>保存</span></a></li>
					<li><a class="save" href="javascript:void(0)" title="保存" onclick="xgdDebug()"><span >调试数据</span></a></li>
					<li class="line">line</li>
				</ul>
			</div>
		</div>
		<div id="stageSc">
			<canvas width="1500" height="800" id="canvas"></canvas>	
		</div>
		
		<div class="rmenue"  id="nodeEditMenu">
			<ul>
				<li><a href="#">编辑节点</a></li>
				<li><a href="#" onclick="deleteNode();">删除节点</a></li>
			</ul>
		</div>
		
		<div class="rmenue" id="linkmenu">
			<ul>
				<li><a href="#" onclick="deleteLink();">删除连线</a></li>
			</ul>
		</div>
		
</div>
	<script type="text/javascript">
	
		
		$("#stageSc").height(600);
		
		
		
		

		var stage 	= 	null;
		var scene 	= 	null;
		var node	=	null;
		var newX	=	30;
		var newY	=	30;

		//新建节点的宽、高；
		var nodeWidth	=	60;
		var nodeHeight	=	57;	
		var nodeColor	=	'255，255，255';
		var nodeImage	=	'/Public/Images/jtopo/node2.png';
		var nodeType	=   'normal';

		//提示文字的坐标；
		var msgX		=	10;
		var msgY		=	10;
		//提示文字的颜色；
		var msgColor	=	'251,242,9';
		var msgFont		=	'14px bold';
		//定义创建节点初始化坐标；
		var beginNode		=	null;
		var endNode			=	null;


		//  设置背景图片；
		var jpImages = {
			'normal':'/Public/Images/jtopo/node2.png',
			'server':'',
			'router':''
		}

		//创建连线参数；
		lk_line_Width 		= 	3;
		lk_bundleGap 		= 	20;
		lk_textOffsetY 		= 	3;
		lk_arrowsRadius 	= 	15;
		lk_strokeColor		=	'255,255,0';

		//创建存储对象；
		var JPStore = 	null;
		//新建节点信息初始化；
		if(window.localStorage){
			JPStore	=	window.localStorage;
		}else{
			$("#container_box").prepend("<h1>您的浏览器不支持HTML5,请更换！</h1>");
		}

		//创建容器存储节点和连接；
		var linkSet = [];
		var nodeSet = [];
		//创建临时节点，定义连线；
		var tempNodeA		=	new JTopo.Node('TemA');
		var tempNodeB		=	new JTopo.Node('TemB');

		tempNodeA.setSize(nodeWidth,nodeHeight);
		tempNodeB.setSize(nodeWidth,nodeHeight);


		var link			=	new JTopo.Link(tempNodeA,tempNodeB);
		
		var canvas = $("#canvas")[0];
		stage = new JTopo.Stage(canvas);
		scene 	= new JTopo.Scene(stage);
		scene.background='/Public/Images/jtopo/enterdesk.png';
			
		scene.addEventListener("dbclick",function(e){
		 	if(e.button == 2){
	            scene.remove(link);
	            return;
	        }
	        if(e.target != null && e.target instanceof JTopo.Node){
	            if(beginNode == null){
	                beginNode = e.target;
	                scene.add(link);
	                tempNodeA.setLocation(e.x, e.y);
	                tempNodeB.setLocation(e.x, e.y);
	            }else if(beginNode !== e.target){
	                var endNode = e.target;
	                var lk = new JTopo.Link(beginNode, endNode);
	                lk.lineWidth 		= 	lk_line_Width; //宽度
					//lk.bundleGap 		= 	lk_bundleGap;
					//lk.textOffsetY 		= 	lk_textOffsetY ;
					lk.arrowsRadius 	= 	lk_arrowsRadius;	//箭头弧度；
					lk.strokeColor		=	lk_strokeColor;	//连线颜色；

					lk.dcid 				= new Date().getTime();
					//添加连接右键菜单；
					lk.addEventListener('mouseup',function(event){
						//右键处理函数；
						if(event.button == 2){
							$("#linkmenu").css({
							top: event.pageY,
							left: event.pageX
						}).show();
						}
					})
	                scene.add(lk);
	               // console.log(lk);
	                //写入缓存；
	                var lkinfo = {'dcid':lk.dcid,'beginNode':beginNode,'endNode':endNode,'lkwidth':lk.lineWidth,'lkscolor':lk.strokeColor,'lkRadius':lk.arrowsRadius}
	                linkSet.push(lkinfo);

	                //console.log(linkSet);
	                //console.log(nodeSet);

	                beginNode = null;
	                endNode = null;
	                scene.remove(link);
	            }else{
	                beginNode = null;
	            }
	        }else{
	        	beginNode = null;
	            scene.remove(link);
	        }
		})
			
    
	    scene.mousedown(function(e){
	        if(e.target == null || e.target === beginNode || e.target === link){
	            scene.remove(link);
	        }

	        if($("#nodeEditMenu").is(":visible")){
	        	$("#nodeEditMenu").hide();
	        }
	        if($("#linkmenu").is(":visible")){
	        	$("#linkmenu").hide();
	        }
	    });

	    scene.mousemove(function(e){
	        tempNodeB.setLocation(e.x, e.y);
		});
			 

		//新增节点；
		function xgdCreateNode()
		{
			if(!scene || !JPStore) return false;
			
			var texts 	=	String(new Date().getTime());
			var nodeText		=	'Node'+texts;
		    var nodeObj 		=	new JTopo.Node(nodeText);
			nodeObj.fillColor	=	nodeColor;
			
			if(newX > 200){
				newX = 30;
			}


			nodeObj.setLocation(newX ,newY);
			nodeObj.setSize(nodeWidth,nodeHeight);
			nodeObj.setImage(nodeImage);

			//初始化节点信息,存入本地;
			var json_obj = {'text':nodeText,'px':newX,'py':newY,'type':nodeType,'width':nodeWidth,'height':nodeHeight,'color':nodeColor};
			//var json_str = JSON.stringify(json_obj);
			//JPStore.setItem(nodeText,json_str);


			nodeSet.push(json_obj);

			nodeObj.addEventListener('mouseup',function(event){
				 if(event.button == 0){
				 	//左键处理函数；
				 	//拖拽，覆盖原有值
				 	
				 	//处理节点；
				 	//var monitor_json = {'name':this.text,'px':this.x,'py':this.y,'type':nodeType,'width':nodeWidth,'height':nodeHeight,'color':nodeColor};

				 	for(i=0; i<nodeSet.length; i++){
				 		if(nodeSet[i].text == this.text){
				 			nodeSet[i].px = this.x;
				 			nodeSet[i].py = this.y;
				 			break;
				 		}
				 	}
				 	

				 	//var monitor_json_str = JSON.stringify(monitor_json);
				 	//JPStore.setItem(String(this.text),monitor_json_str);
				 	

				 }else if(event.button == 2){
				 	//右键处理函数；
				 	 $("#nodeEditMenu").css({
						top: event.pageY,
						left: event.pageX
					}).fadeIn();
				 	
				 	
					
				}
			})


		//重绘节点；
		function reCreateNode(text,color,x,y,width,height,type)
		{
			if(!scene || !JPStore) return false;
			
		    var nodeObj 		=	new JTopo.Node(text);
			nodeObj.fillColor	=	color;
			
			nodeObj.setLocation(x ,y);
			nodeObj.setSize(width,height);
			nodeImage = jpImages.type;
			nodeObj.setImage(nodeImage);

			nodeObj.addEventListener('mouseup',function(event){
				 if(event.button == 0){
				 	//左键处理函数,拖拽，覆盖原有值

				 	for(i=0; i<nodeSet.length; i++){
				 		if(nodeSet[i].text == this.text){
				 			nodeSet[i].px = this.x;
				 			nodeSet[i].py = this.y;
				 			break;
				 		}
				 	}
				 	
				 }else if(event.button == 2){
				 	//右键处理函数；
				 	 $("#nodeEditMenu").css({
						top: event.pageY,
						left: event.pageX
					}).fadeIn();
				 	
				}
			})


			//JPStore
			
			if(scene){
				scene.add(nodeObj);
				beginNode = null;
				newX += 20;
			}
		}

		//重绘连线；
		function reCreateLink(bNode,eNode,line_width,line_radius,color,dcid)
		{
			var lk = new JTopo.Link(bNode, eNode);
            lk.lineWidth 		= 	line_width; //宽度
			lk.arrowsRadius 	= 	line_radius;	//箭头弧度；
			lk.strokeColor		=	color;	//连线颜色；

			lk.dcid 				= dcid;
			//添加连接右键菜单；
			lk.addEventListener('mouseup',function(event){
				//右键处理函数；
				if(event.button == 2){
					$("#linkmenu").css({
					top: event.pageY,
					left: event.pageX
				}).show();
				}
			})
            scene.add(lk);
		}

		//删除节点；
		function xgdRemoveNode()
		{
			if(!scene) return false;

			var i 				=	0;
			var displayedNoeds 	=	scene.getDisplayedNodes();	//获取场景中可见并绘制出来的Node对象；
			var displayedLength	=	displayedNoeds.length;		//获取场景中可见并绘制出来的Node对象个数；

			if(displayedLength){
				scene.remove(displayedNoeds[displayedLength - 1]);
			}

		}
		
		//清除界面；
		function xgdClearScene()
		{
			if(scene){
				scene.clear();
			}

			nodeSet = [];
			linkSet = [];
		}

		function deleteNodeData(sNode){
			for(q=0; q<nodeSet.length; q++){
					if(nodeSet[q].text == sNode[0].text){
						nodeSet.splice(q,1);
						break;
					}
				}
		}

		function deleteLinkData(sLink){
			for(p=0; p<linkSet.length; p++){
					if(linkSet[p].dcid == sLink[0].dcid){
						linkSet.splice(p,1);
						break;
					}
				}
		}


		//删除节点；
		function deleteNode()
		{
			if(!scene) return false;

			var sNode = scene.selectedElements;
			//console.log(sNode); return;
			if(sNode[0] instanceof JTopo.Node){

				var nodeLink = sNode[0].inLinks;
				if(nodeLink){
					deleteLinkData(nodeLink);
				}
				deleteNodeData(sNode);
				scene.remove(sNode[0]);
				
			}else{
				//console.log('-------------');
				createTextNode('请先选择节点，然后点击删除！');
			}
		}

		//删除连线；
		function deleteLink()
		{
			if(!scene) return false;

			var lkNode = scene.selectedElements;
			if(lkNode[0] instanceof JTopo.Link){
				
				//删除缓存的数据；
				deleteLinkData(lkNode);
				scene.remove(lkNode[0]);
			}else{
				//console.log('-------------');
				createTextNode('请先选择连线，然后点击删除！');
			}
		}

		//创建提示；
		function createTextNode(text)
		{
			if(!scene) return false;

			var msgNode	=	new JTopo.TextNode(text);
			msgNode.zIndex++;
			msgNode.setBound(msgX,msgY);
			msgNode.fontColor = msgColor;
			msgNode.font = msgFont;
			scene.add(msgNode);

			setTimeout(deleteTextNode(msgNode),2000);
		}

		function deleteTextNode(textnode)
		{
			if(!scene) return false;
			return function(){
				scene.remove(textnode);
			}
		}

		function xgdSave()
		{

		}

		function runScreen()
		{
			runPrefixMethod(stage.canvas, "RequestFullScreen");
			/*$(document).keyup(function(e){
				if(e.keyCode == 27){
					$.pdialog.closeCurrent();
				}
			})*/

			$(document).bind('mousedown',function(e){
				if(f_IsFullScreen){
					exitFullscreen();
				}
			})
		}

		var runPrefixMethod = function(element, method) {
			var usablePrefixMethod;
			["webkit", "moz", "ms", "o", ""].forEach(function(prefix) {
				if (usablePrefixMethod) return;
				if (prefix === "") {
					// 无前缀，方法首字母小写
					method = method.slice(0,1).toLowerCase() + method.slice(1);
				}
				var typePrefixMethod = typeof element[prefix + method];
				if (typePrefixMethod + "" !== "undefined") {
					if (typePrefixMethod === "function") {
						usablePrefixMethod = element[prefix + method]();
					} else {
						usablePrefixMethod = element[prefix + method];
					}
				}
			}
			);

			return usablePrefixMethod;
		};


		/* 连线--右键菜单处理 */	
		$("#linkmenu a").click(function(){
			
			$("#linkmenu").hide();

		})

		$("#nodeEditMenu a").click(function(){
			
			$("#nodeEditMenu").hide();

		})

		//判断浏览器是否全屏 
		function f_IsFullScreen() { 
			return (document.body.scrollHeight == window.screen.height && document.body.scrollWidth == window.screen.width); 
		} 
    	
		
	// 判断浏览器种类
	function exitFullscreen() {
	  if(document.exitFullscreen) {
	    document.exitFullscreen();
	  } else if(document.mozCancelFullScreen) {
	    document.mozCancelFullScreen();
	  } else if(document.webkitExitFullscreen) {
	    document.webkitExitFullscreen();
	  }
	}

	function xgdReflash()
	{
		
		scene.clear();
		var m = null;
		var n = null;
		//重绘节点；
		for(m=0; m < nodeSet.length; m++){
			reCreateNode(nodeSet[m].text,nodeSet[m].color,nodeSet[m].x,nodeSet[m].y,nodeSet[m].width,nodeSet[m].height,nodeSet[m].type);
		}

		for(n=0; n < linkSet.length; n++){
			reCreateLink(linkSet[n].beginNode,linkSet[n].endNode,linkSet[n].lkwidth,linkSet[n].lkRadius,linkSet[n].lkscolor,linkSet[n].dcid);
		}

	}

	
	function xgdDebug()
	{
		console.log(nodeSet);
		console.log(linkSet);
	}


	$(function(){
		//监听弹出窗口，关闭之后清空本地缓存；
		$("a.close").click(function(){
			if(JPStore){
				JPStore.clear();
			}
		})
	})

	</script>